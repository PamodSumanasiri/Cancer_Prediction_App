import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
import pickle as pickle 

def create_model(data):
    x = data.drop(['diagnosis'],axis=1)
    y = data['diagnosis']

    #Scaling using the StandardScaler
    sclaer = StandardScaler()
    x = sclaer.fit_transform(x)

    #Splitting the data
    x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)

    #Training the model
    model = LogisticRegression()
    model.fit(x_train,y_train)D

    #Testing the model
    y_prediction = model.predict(x_test)
    print("Accuracy is :",accuracy_score(y_test,y_prediction) )
    print("Classification Report : \n",classification_report(y_test,y_prediction))

    return model, sclaer




def get_clean_data():
    data = pd.read_csv("data/data.csv")
    
    data = data.drop(['Unnamed: 32','id'],axis=1)
    data["diagnosis"] = data["diagnosis"].map({'M':1,'B':0})
    return data




def main():
    data = get_clean_data()
    model, scaler = create_model(data)

    with open('model/model.pkl','wb') as f:
        pickle.dump(model,f)

    with open('model/scaler.pkl','wb') as f:
        pickle.dump(scaler,f)


if __name__ == '__main__':
    main()
